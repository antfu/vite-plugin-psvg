<!-- hilbert.psvg            -->
<!-- draws a hiblert curve   -->
<!-- based on https://en.wikipedia.org/wiki/Hilbert_curve
          and http://www.rosettacode.org/wiki/Hilbert_curve#Java -->
<psvg width="256" height="256">

  <def-rot n="" x="" y="" rx="" ry="">
    <if true="{ry==0}">
      <if true="{rx==1}">
        <asgn x="{(n-1)-x}"/>
        <asgn y="{(n-1)-y}"/>
      </if>
      <var t="{x}"/>
      <asgn x="{y}"/>
      <asgn y="{t}"/>
    </if>
    <return value="{x},{y}"/>
  </def-rot>

  <def-d2xy n="" d="">
    <var rx="0" ry="0" t="{d}" x="0" y="0"/>
    <for s="1" true="{s<n}" step="{s}">
      <asgn rx="{(t/2) &amp;1}"/>
      <asgn ry="{(t^rx)&amp;1}"/>
      <var xy="{rot(s,x,y,rx,ry)}"/>
      <asgn x="{NTH(xy,0)}"/>
      <asgn y="{NTH(xy,1)}"/>
      <asgn x="{x+s*rx}"/>
      <asgn y="{y+s*ry}"/>
      <asgn t="{t/4}"/>
    </for>
    <return value="{x},{y}"/>
  </def-d2xy>

  <def-hilbert n="">
    <var pts=""/>
    <for d="0" true="{d<n*n}" step="1">
      <var xy="{d2xy(n,d)}"/>
      <asgn pts="{CAT(pts,xy)}"/>
    </for>
    <return value="{pts}"/>
  </def-hilbert>

  <var order="5"/>
  <var n="{1 &lt;&lt; order}"/>
  <scale x="{WIDTH/n}" y="{HEIGHT/n}"/>

  <stroke color="black"/>
  <fill color="none"/>
  <polyline points="{hilbert(n)}" vector-effect="non-scaling-stroke"/>

</psvg>